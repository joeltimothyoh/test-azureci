trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'
pr: none

resources:
  repositories:
  - repository: PSModulePublisher
    type: github
    name: theohbrothers/PSModulePublisher
    endpoint: joeltimothyoh
    ref: refs/heads/dev

stages:
- stage: Build_Test
  displayName: Build, Test
  jobs:
  - job: windows2019
    pool:
      vmImage: windows-2019
    steps:
    - checkout: self
      submodules: true
    - pwsh: |
        Get-ChildItem -Recurse
    - pwsh: |
        Get-Module PowerShellGet -ListAvailable | Select *
    - pwsh: |
        $elevated = ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
        "Elevated: $elevated"
    # - template: azure-pipelines/windows/continuous-build.yml@PSModulePublisher
    - powershell: |
        "Installing PowerShellGet" | Write-Host
        $powershellGetRequiredVersion = '2.1.2'
        $powershellGetInstalledVersions = (Get-Module 'PowerShellGet' -ListAvailable).Version | % { $_.ToString() }
        if ($powershellGetRequiredVersion -notin $powershellGetInstalledVersions) {
            Install-Module -Name 'PowershellGet' -Repository 'PSGallery' -RequiredVersion $powershellGetRequiredVersion -Scope CurrentUser -Force
        }
  - job: vs2017win2016
    pool:
      vmImage: vs2017-win2016
    steps:
    - checkout: self
      submodules: true
    - pwsh: |
        Get-ChildItem -Recurse
    - pwsh: |
        Get-Module PowerShellGet -ListAvailable | Select *
    - pwsh: |
        $elevated = ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
        "Elevated: $elevated"
    # - template: azure-pipelines/windows/continuous-build.yml@PSModulePublisher
    - powershell: |
        "Installing PowerShellGet" | Write-Host
        $powershellGetRequiredVersion = '2.1.2'
        $powershellGetInstalledVersions = (Get-Module 'PowerShellGet' -ListAvailable).Version | % { $_.ToString() }
        if ($powershellGetRequiredVersion -notin $powershellGetInstalledVersions) {
            Install-Module -Name 'PowershellGet' -Repository 'PSGallery' -RequiredVersion $powershellGetRequiredVersion -Scope CurrentUser -Force
        }
  - job: win1803
    pool:
      vmImage: win1803
    steps:
    - checkout: self
      submodules: true
    - pwsh: |
        Get-ChildItem -Recurse
    - pwsh: |
        Get-Module PowerShellGet -ListAvailable | Select *
    - pwsh: |
        $elevated = ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
        "Elevated: $elevated"
    # - template: azure-pipelines/windows/continuous-build.yml@PSModulePublisher
    - powershell: |
        "Installing PowerShellGet" | Write-Host
        $powershellGetRequiredVersion = '2.1.2'
        $powershellGetInstalledVersions = (Get-Module 'PowerShellGet' -ListAvailable).Version | % { $_.ToString() }
        if ($powershellGetRequiredVersion -notin $powershellGetInstalledVersions) {
            Install-Module -Name 'PowershellGet' -Repository 'PSGallery' -RequiredVersion $powershellGetRequiredVersion -Scope CurrentUser -Force
        }
  - job: ubuntu1604
    pool:
      vmImage: ubuntu-16.04
    container: joeltimothyoh/powershell:6.1.0-ubuntu-18.04-git
    steps:
    - checkout: self
      submodules: true
    - pwsh: |
        Get-ChildItem -Recurse
    - pwsh: |
        Get-Module PowerShellGet -ListAvailable | Select *
    # - template: azure-pipelines/linux/continuous-build.yml@PSModulePublisher
  - job: macOS1014
    pool:
      vmImage: macOS-10.14
    steps:
    - checkout: self
      submodules: true
    - pwsh: |
        Get-ChildItem -Recurse
    - pwsh: |
        Get-Module PowerShellGet -ListAvailable | Select *
    # - template: azure-pipelines/macos/continuous-build.yml@PSModulePublisher
  - job: macOS1013
    pool:
      vmImage: macOS-10.13
    steps:
    - checkout: self
      submodules: true
    - pwsh: |
        Get-ChildItem -Recurse
    - pwsh: |
        Get-Module PowerShellGet -ListAvailable | Select *
    # - template: azure-pipelines/macos/continuous-build.yml@PSModulePublisher
# - stage: Publish
#   # dependsOn:
#   # - Build_Test
#   jobs:
#   - job: Windows
#     pool:
#       vmImage: windows-2019
#     steps:
#     - checkout: self
#       submodules: true
#     - template: azure-pipelines/windows/continuous-build.yml@PSModulePublisher
#     - template: azure-pipelines/common/run-publish.yml@PSModulePublisher
