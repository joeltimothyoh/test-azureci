# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- debug

stages:
- stage: Build_Test
  displayName: Build, Test
  jobs:
  - job: windows2019
    pool:
      vmImage: windows-2019
    steps:
    - checkout: self
      submodules: true
    - pwsh: Get-ChildItem -Recurse
      displayName: Display repository contents
    - pwsh: |
        hostname
        whoami
        systeminfo
        Get-PSDrive
        $PSVersionTable | Out-String
        Get-Location
      displayName: Display system info
    - pwsh: |
        $elevated = ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
        "Elevated: $elevated"
      displayName: Check for elevation
    - pwsh: Get-Module PowerShellGet -ListAvailable | Select *
      displayName: Check dependencies versions
    - pwsh: |
        New-Item "C:\program files\hi" -ItemType File
        Install-Module -Name MyPublishingDebugger -Repository PSGallery -Scope AllUsers
      displayName: Run debug tests
  - job: vs2017win2016
    pool:
      vmImage: vs2017-win2016
    steps:
    - checkout: self
      submodules: true
    - pwsh: Get-ChildItem -Recurse
      displayName: Display repository contents
    - pwsh: |
        hostname
        whoami
        systeminfo
        Get-PSDrive
        $PSVersionTable | Out-String
        Get-Location
      displayName: Display system info
    - pwsh: |
        $elevated = ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
        "Elevated: $elevated"
      displayName: Check for elevation
    - pwsh: Get-Module PowerShellGet -ListAvailable | Select *
      displayName: Check dependencies versions
    - pwsh: |
        New-Item "C:\program files\hi" -ItemType File
        Install-Module -Name MyPublishingDebugger -Repository PSGallery -Scope AllUsers
      displayName: Run debug tests
  - job: win1803
    pool:
      vmImage: win1803
    steps:
    - checkout: self
      submodules: true
    - pwsh: Get-ChildItem -Recurse
      displayName: Display repository contents
    - pwsh: |
        hostname
        whoami
        systeminfo
        Get-PSDrive
        $PSVersionTable | Out-String
        Get-Location
      displayName: Display system info
    - pwsh: |
        $elevated = ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
        "Elevated: $elevated"
      displayName: Check for elevation
    - pwsh: Get-Module PowerShellGet -ListAvailable | Select *
      displayName: Check dependencies versions
    - pwsh: |
        New-Item "C:\program files\hi" -ItemType File
        Install-Module -Name MyPublishingDebugger -Repository PSGallery -Scope AllUsers
      displayName: Run debug tests
  - job: ubuntu1604
    pool:
      vmImage: ubuntu-16.04
    container: joeltimothyoh/powershell:6.1.0-ubuntu-18.04-git
    steps:
    - checkout: self
      submodules: true
    - pwsh: Get-ChildItem -Recurse
      displayName: Display repository contents
    - bash: |
        hostname
        whoami
        cat /etc/*release
        lscpu
        free
        df -h
        pwd
      displayName: Display system info
    - pwsh: Get-Module PowerShellGet -ListAvailable | Select *
      displayName: Check dependencies versions
  - job: macOS1014
    pool:
      vmImage: macOS-10.14
    steps:
    - checkout: self
      submodules: true
    - pwsh: Get-ChildItem -Recurse
      displayName: Display repository contents
    - bash: |
        hostname
        whoami
        system_profiler -detailLevel mini
        top -l 1 -s 0 | grep PhysMem
        df -h
        pwd
      displayName: Display system info
    - pwsh: Get-Module PowerShellGet -ListAvailable | Select *
      displayName: Check dependencies versions
  - job: macOS1013
    pool:
      vmImage: macOS-10.13
    steps:
    - checkout: self
      submodules: true
    - pwsh: Get-ChildItem -Recurse
      displayName: Display repository contents
    - bash: |
        hostname
        whoami
        system_profiler -detailLevel mini
        top -l 1 -s 0 | grep PhysMem
        df -h
        pwd
      displayName: Display system info
    - pwsh: Get-Module PowerShellGet -ListAvailable | Select *
      displayName: Check dependencies versions
