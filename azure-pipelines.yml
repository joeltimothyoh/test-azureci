# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  GLOBAL_VAR1: global1

stages:
- stage: Build
  variables:
    STAGE_VAR1: stage1
  jobs:
  - job: 'Ubuntu_1604'
    continueOnError: false
    pool:
      vmImage: 'ubuntu-16.04'
    workspace:
      clean: all
    timeoutInMinutes: 5
    variables:
      JOB_VAR1: job1
    steps:
    - script: |
        whoami
        cat /etc/*release
        lscpu
        df -h
        free
    - script: |
        printenv
    - script: |
        echo 2
        echo $GLOBAL_VAR1
        echo $STAGE_VAR1
        echo $JOB_VAR1
  - job: 'Ubuntu_1604_2'
    continueOnError: false
    pool:
      vmImage: 'ubuntu-16.04'
    workspace:
      clean: all
    timeoutInMinutes: 5
    steps:
    - script: |
        whoami
        cat /etc/*release
        lscpu
        df -h
        free
    - script: |
        printenv
    - script: |
        echo 2
        echo $GLOBAL_VAR1
        echo $STAGE_VAR1
        echo $JOB_VAR1
- stage: Test
  jobs:
  - job: 'Ubuntu_1604'
    steps:
    - script: |
        echo running tests..
        echo $GLOBAL_VAR1
        echo $STAGE_VAR1
        echo $JOB_VAR1
- stage: Parallel
  dependsOn: []
  jobs:
  - job: 'Ubuntu_1604'
    steps:
    - script: |
        echo running parallel tasks..
        echo $GLOBAL_VAR1
        echo $STAGE_VAR1
        echo $JOB_VAR1
