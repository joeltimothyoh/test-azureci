    # Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
# - job: WindowsServer2019
#   pool:
#     vmImage: 'windows-2019'
#   steps:
#   - powershell: |
#       Get-PSDrive
#       $PSVersionTable
#       Get-Module PowershellGet -Listavailable
#       $psGetRequiredVersion = '2.2.1'
#       $psGetInstalledVersions = (Get-Module powershellget -ListAvailable).Version | % { $_.ToString() }
#       if ($psGetRequiredVersion -notin $psGetInstalledVersions) {
#           Install-Module -Name PowershellGet -RequiredVersion $psGetRequiredVersion -Force -Verbose
#       }
#       Import-Module -Name PowerShellGet -RequiredVersion $psGetRequiredVersion -Force -Verbose
  # - pwsh: |
  #     $PSVersionTable
  #     Get-Module PowershellGet -Listavailable
  #     $psGetRequiredVersion = '2.2.1'
  #     $psGetInstalledVersions = (Get-Module powershellget -ListAvailable).Version | % { $_.ToString() }
  #     if ($psGetRequiredVersion -notin $psGetInstalledVersions) {
  #         Install-Module -Name PowershellGet -RequiredVersion $psGetRequiredVersion -Force -Verbose
  #     }
  #     Import-Module -Name PowerShellGet -RequiredVersion $psGetRequiredVersion -Force -Verbose
# - job: WindowsServer2016
#   pool:
#     vmImage: 'vs2017-win2016'
#   steps:
#   - powershell: |
#       Get-PSDrive
#       $PSVersionTable
#       Get-Module PowershellGet -Listavailable
#   - pwsh: |
#       $PSVersionTable
#       Get-Module PowershellGet -Listavailable

# - job: WindowsServer1803
#   pool:
#     vmImage: 'win1803'
#   steps:
#   - powershell: |
#       Get-PSDrive
#       $PSVersionTable
#       Get-Module PowershellGet -Listavailable
#   - pwsh: |
#       $PSVersionTable
#       Get-Module PowershellGet -Listavailable

# - job: WindowsServer2012R2
#   pool:
#     vmImage: 'vs2015-win2012r2'
#   steps:
#   - powershell: |
#       Get-PSDrive
#       $PSVersionTable
#       Get-Module PowershellGet -Listavailable

- job: Ubuntu1604
  pool:
    vmImage: 'ubuntu-16.04'
  container: mcr.microsoft.com/powershell:6.1.0-ubuntu-18.04
  steps:
  - bash: |
      printenv
  - pwsh: |
      Get-PSDrive
      $PSVersionTable
      Get-Module PowershellGet -Listavailable
      # Import the PowershellGet module of the specified version
      $powershellGetRequiredVersion = '2.1.2'
      $PSRepository = if ($env:PSRepository) { $env:PSRepository } else { 'PSGallery' }
      $powershellGetInstalledVersions = (Get-Module PowerShellGet -ListAvailable).Version | % { $_.ToString() }
      if ($powershellGetRequiredVersion -notin $powershellGetInstalledVersions) {
          Install-Module -Name PowershellGet -Repository $PSRepository -RequiredVersion $powershellGetRequiredVersion -Scope CurrentUser -Force -Verbose -AllowClobber
      }
      Import-Module -Name PowerShellGet -RequiredVersion $powershellGetRequiredVersion -Force -Verbose
      Get-Module -Name PowerShellGet -ListAvailable

# - job: macOS1013
#   pool:
#     vmImage: 'macOS-10.13'
#   steps:
#   - pwsh: |
#       Get-PSDrive
#       $PSVersionTable
#       Get-Module PowershellGet -Listavailable
