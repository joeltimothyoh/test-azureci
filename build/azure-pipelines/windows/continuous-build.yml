steps:
- powershell: |
    hostname
    whoami
    systeminfo
    Get-PSDrive
    $PSVersionTable | Out-String
    Get-Location
  displayName: Display System Info
- powershell: |
    Get-ChildItem env:* | Format-Table -AutoSize
  displayName: Display Environment Variables
- powershell: |
    $matchInfo = $env:BUILD_SOURCEBRANCH | Select-String -Pattern '^refs\/tags\/v((?:\d+\.)+\d+)$'
    $MODULE_VERSION = if ($matchInfo) { $matchInfo.Matches.Groups[1].Value } else { $null }
    # Set job-scoped variables
    echo "##vso[task.setvariable variable=MODULE_VERSION]${MODULE_VERSION}"
  displayName: Process CI variables
- pwsh: |
    .\build\scripts\install-dependencies.ps1 -Verbose
  displayName: Install Dependencies
- pwsh: |
    $manifest = .\build\scripts\generate-modulemanifest.ps1 -Verbose
    $MODULE_MANIFEST_PATH = $manifest.Fullname
    # Set job-scoped variables
    echo "##vso[task.setvariable variable=MODULE_MANIFEST_PATH]${MODULE_MANIFEST_PATH}"
  displayName: Generate the module manifest
  condition:
- pwsh: |
    .\build\scripts\test-modulemanifest.ps1 -Path $env:MODULE_MANIFEST_PATH -Verbose
  displayName: Test the module manifest
- pwsh: |
    .\build\scripts\test-module.ps1 -Path $env:MODULE_MANIFEST_PATH -Verbose
  displayName: Test the module
- pwsh: |
    .\build\scripts\publish-module.ps1 -Path $env:MODULE_MANIFEST_PATH -Verbose
  displayName: Publish the module
  condition: and(startsWith(variables['Build.SourceBranch'], 'refs/tags/'), ne(variables['MODULE_VERSION'], '')
